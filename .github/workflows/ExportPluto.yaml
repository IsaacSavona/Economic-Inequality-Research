name: Export Pluto notebooks
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: pluto-export
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Install Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1"

      - name: Cache Julia artifacts & such
        uses: julia-actions/cache@v2
        with:
          cache-registries: "true"

      - name: Set up notebook state cache
        uses: actions/cache@v4
        with:
          path: pluto_state_cache
          key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*') }}-${{ hashFiles('**/*jl') }}
          restore-keys: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*') }}

      - name: Ignore notebook state cache in export
        run: echo 'pluto_state_cache' >> .gitignore

      - name: Run & export Pluto notebooks
        run: |
          julia -e 'using Pkg
            Pkg.activate(mktempdir())
            Pkg.add([
              Pkg.PackageSpec(name="PlutoSliderServer", version="1"),
            ])

            import PlutoSliderServer

            PlutoSliderServer.github_action(".";
              Export_cache_dir="pluto_state_cache",
              Export_baked_notebookfile=false,
              Export_baked_state=false,
            )'

      - name: Set up Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: '3.1'

      - name: Install Jekyll and Bundler
          run: |
            gem install bundler
            bundle init
            echo 'gem "jekyll", "~> 4.3"' >> Gemfile
            echo 'gem "minima", "~> 2.5"' >> Gemfile
            echo 'gem "jekyll-feed", "~> 0.17"' >> Gemfile
            bundle install

      - name: Build Jekyll site
          run: bundle exec jekyll build -d build

      - name: Create index.md for Jekyll layout
        run: |
          echo '---' > index.md
          echo 'layout: home' >> index.md
          echo 'title: Economic Inequality Research' >> index.md
          echo '---' >> index.md
          echo 'Welcome to my collection of Pluto.jl notebooks on inequality.<br>' >> index.md
          echo 'Click any of the notebooks below to explore:<ul>' >> index.md
          find src -name '*.html' | while read f; do
            fname=$(basename "$f")
            echo "<li><a href=\"$f\">$fname</a></li>" >> index.md
          done
          echo '</ul>' >> index.md

      - name: Remove .nojekyll if it exists
        run: |
          rm -f .nojekyll


      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: .
          single-commit: true
